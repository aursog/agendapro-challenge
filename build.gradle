plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    id 'org.flywaydb.flyway' version '10.12.0'
    id 'jacoco'
}

group = 'com.nisum'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

dependencies {
    // spring-boot web
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // spring-boot actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // spring devtools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // openapi3 doc
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

    // databases
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'com.h2database:h2:2.2.220'

    // annotation lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // JWT dependencies
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // faker
    implementation ('com.github.javafaker:javafaker:1.0.2') { exclude module: 'snakeyaml' }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

task jacocoReport(type: JacocoReport) {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ["**/clients/*",
                              "**/model/*",
                              "**/dto/*",
                              "**/repositories/*",
                              "**/exceptions/*",
                              "**/controller/*",
                              "**/config/*"
                    ]
            )
        }))
    }
}